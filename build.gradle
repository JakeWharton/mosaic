buildscript {
	ext.deps = [
		'composeCompiler': 'androidx.compose.compiler:compiler:1.0.0-alpha04'
	]

	dependencies {
		classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.10'
		classpath "dev.nokee.jni-library:dev.nokee.jni-library.gradle.plugin:0.4.0"
	}
	repositories {
		mavenCentral()
		gradlePluginPortal()
	}
}

subprojects {
	repositories {
		mavenCentral()
		google()
		maven {
			url 'https://kotlin.bintray.com/kotlinx'
		}
	}

	tasks.withType(org.jetbrains.kotlin.gradle.dsl.KotlinCompile).configureEach { task ->
		task.kotlinOptions {
			freeCompilerArgs += [
				'-progressive',
				'-Xopt-in=kotlin.RequiresOptIn',
				'-Xopt-in=androidx.compose.runtime.ExperimentalComposeApi',
			]
		}
	}

	def configureKotlinPlugin = {
		configurations {
			kotlinPlugin
		}

		tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
			kotlinOptions {
				useIR = true
			}

			def pluginConfiguration = configurations.kotlinPlugin
			dependsOn(pluginConfiguration)
			doFirst {
				if (!pluginConfiguration.isEmpty()) {
					kotlinOptions.freeCompilerArgs +=
						"-Xplugin=${pluginConfiguration.files.first()}"
				}
			}
		}
	}
	plugins.withId('org.jetbrains.kotlin.jvm', configureKotlinPlugin)
	plugins.withId('org.jetbrains.kotlin.multiplatform', configureKotlinPlugin)
}
