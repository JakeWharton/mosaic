import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
import org.jetbrains.kotlin.gradle.tasks.KotlinJvmCompile
import org.jetbrains.kotlin.gradle.dsl.JvmTarget

buildscript {
	dependencies {
		classpath libs.kotlin.gradlePlugin
		classpath libs.maven.publish.gradlePlugin
		classpath libs.dokka.gradlePlugin
		classpath libs.buildconfig.gradlePlugin
		classpath libs.poko.gradlePlugin
		classpath libs.spotless.gradlePlugin
		classpath 'com.jakewharton.mosaic:mosaic-gradle-plugin'
	}
	repositories {
		mavenCentral()
		google()
		gradlePluginPortal()
	}
}

allprojects {
	group = GROUP
	version = VERSION_NAME

	repositories {
		mavenCentral()
		google()
	}

	tasks.withType(JavaCompile).configureEach {
		sourceCompatibility = JavaVersion.VERSION_1_8
		targetCompatibility = JavaVersion.VERSION_1_8
	}

	tasks.withType(KotlinJvmCompile).configureEach {
		compilerOptions.jvmTarget = JvmTarget.JVM_1_8
	}

	tasks.withType(KotlinCompile).configureEach {
		compilerOptions.freeCompilerArgs.add('-Xjvm-default=all')
	}

	plugins.withId('maven-publish') {
		publishing {
			repositories {
				maven {
					name = "TestMaven"
					url = file("${rootProject.buildDir}/testMaven").toURI().toString()
				}
			}
		}
	}

	apply plugin: 'com.diffplug.spotless'
	spotless {
		kotlin {
			target("src/**/*.kt")
			ktlint(libs.ktlint.core.get().version)
				.editorConfigOverride([
					'ktlint_standard_filename': 'disabled',
					'ktlint_standard_property-naming': 'disabled',
					'ktlint_function_naming_ignore_when_annotated_with': 'Composable',
					'ktlint_compose_modifier-missing-check': 'disabled',
					'ktlint_compose_compositionlocal-allowlist': 'disabled',
				])
				.customRuleSets([
					libs.ktlint.composeRules.get().toString(),
				])
		}
	}
}
